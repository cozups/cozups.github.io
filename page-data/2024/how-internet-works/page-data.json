{"componentChunkName":"component---src-templates-blog-post-js","path":"/2024/how-internet-works/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"markdownRemark":{"id":"c497e68d-8609-5e2f-b889-96fc08b0af8e","excerpt":"…","html":"<h1>인터넷이란?</h1>\n<p>인터넷이 무엇인지 알기 전에 네트워크에 대하여 알아야한다.</p>\n<p><strong>네트워크</strong>는 서로 연결된 컴퓨터 또는 장치의 그룹이다. 이러한 네트워크들이 서로 연결되어 인터넷을 형성한다.</p>\n<p>인터넷은 핵 공격을 견딜 수 있는 분산형 통신 네트워크를 만들기 위해 개발되었지만 수년에 걸쳐 전 세계를 아우르는 복잡하고 정교한 네트워크로 발전했다.</p>\n<h1>인터넷이 동작하는 방법</h1>\n<p>인터넷은 프로토콜이라는 것을 사용한다. 프로토콜은 데이터가 전송되는 방식과 데이터가 신뢰성있고 안전하게 전송되도록 보장한다.</p>\n<p>인터넷을 통해 데이터를 전송하면</p>\n<ul>\n<li>데이터가 패킷 단위로 전송되어 라우터에 도달한다.\n<ul>\n<li>패킷: 데이터가 전송되는 작은 단위</li>\n</ul>\n</li>\n<li>라우터는 패킷을 검사하고 다음 라우터로 패킷을 전송한다.\n<ul>\n<li>라우터: 네트워크 간에 데이터 패킷을 전송할 수 있도록 하는 장치</li>\n</ul>\n</li>\n<li>최종 도착지에 패킷이 도달할 때까지 이 과정을 반복한다.</li>\n</ul>\n<p>인터넷을 통해 데이터를 전송하기 위해 사용하는 기술로는</p>\n<ul>\n<li>IP (Internet Protocol)</li>\n<li>TCP (Transmission Control Protocol)</li>\n<li>DNS (Domain Name System)</li>\n<li>HTTP (Hypertext Transfer Protocol)</li>\n<li>SSL/TLS (Secure Sockets Layer / Transport Layer Security)</li>\n</ul>\n<p>가 있다.</p>\n<h1>프로토콜의 역할</h1>\n<h2>IP (Internet Protocol)</h2>\n<p>올바른 목적지로 데이터 패킷을 전송하는 역할을 하는 프로토콜</p>\n<h2>TCP/UDP</h2>\n<p>데이터 패킷이 신뢰성있고 효율적으로 전달되도록 보장하는 프로토콜</p>\n<h2>DNS</h2>\n<p>도메인 네임을 IP 주소로 바꾸는 시스템</p>\n<ul>\n<li>IP 주소란 네트워크의 장치가 갖는 고유한 식별자다. <code class=\"language-text\">192.168.1.1</code>과 같이 일련의 번호로 이루어진 형태를 갖는다.</li>\n<li>도메인 네임은 사람이 읽을 수 있는 <code class=\"language-text\">google.com</code>과 같은 형태를 갖는다.</li>\n</ul>\n<p>DNS는 도메인 네임을 IP 주소로 바꾸어준다. 주소 창에 도메인 네임을 적으면 DNS가 DNS서버에 DNS 쿼리를 보내 그에 맞는 IP 주소로 바꾸어주고 컴퓨터가 이 IP 주소를 이용하여 해당 웹 사이트에 접속하거나 필요한 자원에 접근할 수 있게 해준다.</p>\n<h2>HTTP</h2>\n<p>클라이언트와 서버 간의 데이터 통신을 담당하는 프로토콜</p>\n<p>웹 사이트에 방문하게 되면 클라이언트는 서버에 웹 페이지나 다른 필요한 자원을 요청하는 HTTP request를 보내게 된다. 그럼 서버는 이를 확인하고 클라이언트에 HTTP response를 보내게 된다.</p>\n<h3>HTTPS</h3>\n<p>HTTPS는 HTTP보다 좀 더 보안화된 프로토콜이다. 로그인 정보나 결제 수단에 대한 정보와 같은 민감한 정보들을 SSL/TLS를 이용해 암호화하여 전송한다.</p>\n<h1>TCP/IP</h1>\n<ul>\n<li><code class=\"language-text\">Port</code>: 장치에서 작동하는 서비스나 애플리케이션을 식별하기 위한 번호</li>\n<li><code class=\"language-text\">Socket</code>: IP 주소와 포트 번호의 조합. 통신을 위한 특정 엔드포인트를 나타낸다.</li>\n</ul>\n<p>두 장치가 연결이 필요할 때 소켓을 이용하여 연결을 설정한다. 연결 설정 과정에서 데이터의 최대 세그먼트 크기 및 창 크기와 같은 다양한 요소들을 결정한다.</p>\n<p>연결이 형성되면 두 장치간의 데이터 전송이 가능하다. 데이터는 세그먼트 단위로 이루어 지며 각 세그먼트는 순서 번호와 메타데이터를 갖고 있다.</p>\n<h1>SSL과 TLS를 이용한 인터넷 통신 보안</h1>\n<ul>\n<li><code class=\"language-text\">certificates</code>: 클라이언트와 서버 간 신뢰를 구축하기 위한 인증서. 서버에 대한 정보가 담겨있으며 신뢰성있는 써드파티가 서명하여 진위 여부를 인증한다.</li>\n<li><code class=\"language-text\">Handshake</code>: 핸드셰이크를 하는 동안 클라이언트와 서버가 데이터를 암호화할 알고리즘과 다른 매개변수들을 결정한다.</li>\n<li><code class=\"language-text\">Encryption</code>: 보안 연결이 설정되면 앞서 결정한 알고리즘을 사용하여 데이터가 암호화되고 클라이언트와 서버 간에 데이터를 안전하게 전송한다.</li>\n</ul>\n<p><a href=\"https://cs.fyi/guide/how-does-internet-work#introduction-to-the-internet\">How does the Internet Work? - cs.fyi</a></p>","frontmatter":{"title":"인터넷이 동작하는 방법","date":"February 21, 2024","description":"프론트엔드 로드맵 - 인터넷 동작 원리 이해하기","tags":["Web"]}},"previous":{"fields":{"slug":"/2024/testing-getBy-queryBy-findBy/"},"frontmatter":{"title":"[React Testing] getBy, queryBy, findBy"}},"next":{"fields":{"slug":"/2024/refactor--5ot/"},"frontmatter":{"title":"5ot 프로젝트 리팩토링"}}},"pageContext":{"id":"c497e68d-8609-5e2f-b889-96fc08b0af8e","previousPostId":"08f1f0da-a52e-52a4-8e8d-ba01d0228865","nextPostId":"58bac30d-b73c-524e-8e9c-49007eef574e"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}
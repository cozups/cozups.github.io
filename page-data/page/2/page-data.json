{"componentChunkName":"component---src-templates-blog-list-js","path":"/page/2/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"categoryList":{"categories":["Algorithms","Daily","Deploy","Frontend","JavaScript","Projects","Study","TypeScript"]},"allMarkdownRemark":{"nodes":[{"id":"777e0d1b-e406-53ca-afb8-70ed9740cc73","excerpt":"1. Testing…","fields":{"slug":"/2024/testing-start-testing/"},"frontmatter":{"date":"January 11, 2024","title":"[React Testing] 테스팅 시작하기","description":"리액트 테스팅에 대한 기본사항"}},{"id":"783f46c9-5c71-56bb-be26-669021eb4b43","excerpt":"1. 병렬 쿼리(Parallel Queries) - 동시에 쿼리하기 React Query에서는 useQuery를 여러 개 쓰는 것 만으로도 병렬적인 쿼리가 가능하다.  Dynamic Parallel Queries…","fields":{"slug":"/2023/RQ-queries/"},"frontmatter":{"date":"December 11, 2023","title":"[React Query] Queries - parallel, dependent, paginated, infinite queries","description":"Parallel Queries / Dependent Queries / Paginated Queries / Infinte Queries"}},{"id":"fbe27f0f-bbf0-5490-9ff7-4745c750f7ed","excerpt":"1. React Query? React 애플리케이션에서 Data fetching을 위한 라이브러리 왜 필요할까? React는 UI 라이브러리이므로 데이터를 가져오는 데에 특별한 형식이 있는 것이 아니다. useEffect 훅과 useState…","fields":{"slug":"/2023/RQ-caching-refetching/"},"frontmatter":{"date":"December 06, 2023","title":"[React Query] useQuery / 캐싱 / refetching","description":"React Query 사용법"}},{"id":"1aef92c4-3701-5de9-a137-75ad7faf2d51","excerpt":"1. Redux Toolkit이 등장한 이유 Redux를 사용하기 위해서는 복잡한 셋업과정이 필요했다. action type action creator reducer의 switch…","fields":{"slug":"/2023/Redux-Redux-Toolkit/"},"frontmatter":{"date":"December 05, 2023","title":"Redux와 Redux Toolkit의 비교","description":"Redux와 Redux Toolkit의 사용법을 배우면서 정리하는 비교글"}},{"id":"046b98d1-c784-572a-bbc1-4777464fdb06","excerpt":"…","fields":{"slug":"/2023/react-key-uuid/"},"frontmatter":{"date":"November 15, 2023","title":"[React] key에 uuid를 사용하는 것은 좋은 선택이 아니다.","description":"key의 용도를 알아야 하는 이유"}},{"id":"5231210c-ca5d-5d9d-b1ac-42851a98ba58","excerpt":"Render and Commit – React Understanding Reconciliation: React Rendering Phases UI를 보여주는 3가지 단계 렌더링 트리거 컴포넌트 렌더링 하기 DOM에 commit 하기 Step…","fields":{"slug":"/2023/how-react-render/"},"frontmatter":{"date":"November 01, 2023","title":"React의 렌더링 과정","description":"React의 render phase와 commit phase"}},{"id":"a9bbe2a7-c38a-5756-98bf-0d7c721b2912","excerpt":"1. Invert Binary Tree Invert Binary Tree - LeetCode 트리의 좌우를 바꾸는 문제 각 노드에 대하여 left child와 right child를 바꾼다. 재귀를 이용한다. 코드 2. Maximum Depth of…","fields":{"slug":"/2023/neetcode-Tree/"},"frontmatter":{"date":"October 23, 2023","title":"[니트코드 Blind 75] Tree","description":" "}},{"id":"2a14ebfe-107c-5716-b94e-2143a849603b","excerpt":"…","fields":{"slug":"/2023/semantic-tags/"},"frontmatter":{"date":"October 18, 2023","title":"시맨틱 태그(Semantic Tag)","description":" "}},{"id":"486b4986-b0f7-56a7-9347-53ab5844c10a","excerpt":"Space-around vs Space-evenly  flex-flow flex-direction과 flex-wrap의 축약형 align-items, align-content, align-self 셋 다 cross-axis…","fields":{"slug":"/2023/CSS-Flex/"},"frontmatter":{"date":"October 18, 2023","title":"CSS Flex에 대해 몰랐던 것들","description":"flex에 대해 자세히 알지 못했던 것들 정리하기"}},{"id":"c95c47eb-a3c1-5497-be47-8ddf5f33918a","excerpt":"1. Reverse Linked List Reverse Linked List - LeetCode 연결 리스트의 순서를 뒤집으면 되는 문제 next 포인터를 반대 방향으로 돌리면 된다. 코드 2. Merge Two Sorted Lists Merge…","fields":{"slug":"/2023/neetcode-Linked-List/"},"frontmatter":{"date":"October 17, 2023","title":"[니트코드 Blind 75] Linked List","description":" "}}]}},"pageContext":{"limit":10,"skip":10,"numPages":8,"currentPage":2}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}
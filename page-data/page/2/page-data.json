{"componentChunkName":"component---src-templates-blog-list-js","path":"/page/2/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"categoryList":{"categories":["Algorithms","Blog","Deploy","Frontend","JavaScript","Projects","Study","TypeScript"]},"allMarkdownRemark":{"nodes":[{"id":"58bac30d-b73c-524e-8e9c-49007eef574e","excerpt":"…","fields":{"slug":"/2024/refactor--5ot/"},"frontmatter":{"date":"April 28, 2024","title":"5ot 프로젝트 리팩토링","description":"5ot 프로젝트를 다시 살펴보며 적어보는 리팩토링 로그"}},{"id":"c497e68d-8609-5e2f-b889-96fc08b0af8e","excerpt":"…","fields":{"slug":"/2024/how-internet-works/"},"frontmatter":{"date":"February 21, 2024","title":"인터넷이 동작하는 방법","description":"프론트엔드 로드맵 - 인터넷 동작 원리 이해하기"}},{"id":"08f1f0da-a52e-52a4-8e8d-ba01d0228865","excerpt":"쿼리 메서드들에 대한 설명과 사용법은 공식 문서를 참조 About Queries | Testing Library getBy, queryBy, findBy에 대해 알아보자. 1. getBy Returns the matching node for a…","fields":{"slug":"/2024/testing-getBy-queryBy-findBy/"},"frontmatter":{"date":"January 15, 2024","title":"[React Testing] getBy, queryBy, findBy","description":"getBy, queryBy, findBy 사용하기"}},{"id":"777e0d1b-e406-53ca-afb8-70ed9740cc73","excerpt":"1. Testing…","fields":{"slug":"/2024/testing-start-testing/"},"frontmatter":{"date":"January 11, 2024","title":"[React Testing] 테스팅 시작하기","description":"리액트 테스팅에 대한 기본사항"}},{"id":"783f46c9-5c71-56bb-be26-669021eb4b43","excerpt":"1. 병렬 쿼리(Parallel Queries) - 동시에 쿼리하기 React Query에서는 useQuery를 여러 개 쓰는 것 만으로도 병렬적인 쿼리가 가능하다.  Dynamic Parallel Queries…","fields":{"slug":"/2023/RQ-queries/"},"frontmatter":{"date":"December 11, 2023","title":"[React Query] Queries - parallel, dependent, paginated, infinite queries","description":"Parallel Queries / Dependent Queries / Paginated Queries / Infinte Queries"}},{"id":"fbe27f0f-bbf0-5490-9ff7-4745c750f7ed","excerpt":"1. React Query? React 애플리케이션에서 Data fetching을 위한 라이브러리 왜 필요할까? React는 UI 라이브러리이므로 데이터를 가져오는 데에 특별한 형식이 있는 것이 아니다. useEffect 훅과 useState…","fields":{"slug":"/2023/RQ-caching-refetching/"},"frontmatter":{"date":"December 06, 2023","title":"[React Query] useQuery / 캐싱 / refetching","description":"React Query 사용법"}},{"id":"1aef92c4-3701-5de9-a137-75ad7faf2d51","excerpt":"1. Redux Toolkit이 등장한 이유 Redux를 사용하기 위해서는 복잡한 셋업과정이 필요했다. action type action creator reducer의 switch…","fields":{"slug":"/2023/Redux-Redux-Toolkit/"},"frontmatter":{"date":"December 05, 2023","title":"Redux와 Redux Toolkit의 비교","description":"Redux와 Redux Toolkit의 사용법을 배우면서 정리하는 비교글"}},{"id":"046b98d1-c784-572a-bbc1-4777464fdb06","excerpt":"…","fields":{"slug":"/2023/react-key-uuid/"},"frontmatter":{"date":"November 15, 2023","title":"[React] key에 uuid를 사용하는 것은 좋은 선택이 아니다.","description":"key의 용도를 알아야 하는 이유"}},{"id":"5231210c-ca5d-5d9d-b1ac-42851a98ba58","excerpt":"Render and Commit – React Understanding Reconciliation: React Rendering Phases UI를 보여주는 3가지 단계 렌더링 트리거 컴포넌트 렌더링 하기 DOM에 commit 하기 Step…","fields":{"slug":"/2023/how-react-render/"},"frontmatter":{"date":"November 01, 2023","title":"React의 렌더링 과정","description":"React의 render phase와 commit phase"}},{"id":"a9bbe2a7-c38a-5756-98bf-0d7c721b2912","excerpt":"1. Invert Binary Tree Invert Binary Tree - LeetCode 트리의 좌우를 바꾸는 문제 각 노드에 대하여 left child와 right child를 바꾼다. 재귀를 이용한다. 코드 2. Maximum Depth of…","fields":{"slug":"/2023/neetcode-Tree/"},"frontmatter":{"date":"October 23, 2023","title":"[니트코드 Blind 75] Tree","description":" "}}]}},"pageContext":{"limit":10,"skip":10,"numPages":8,"currentPage":2}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}
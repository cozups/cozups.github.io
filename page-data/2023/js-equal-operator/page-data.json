{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/js-equal-operator/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"markdownRemark":{"id":"cec94730-fb99-5be9-8194-a5285d919a0b","excerpt":"==와 ===는 모두 비교 연산자이다. 다만 ==은 동등 비교 연산자이고, ===는 일치 비교 연산자이다. 비교하는 엄격성의 정도가 다르다.…","html":"<p>==와 ===는 모두 비교 연산자이다.</p>\n<p>다만 ==은 동등 비교 연산자이고, ===는 일치 비교 연산자이다. 비교하는 엄격성의 정도가 다르다.</p>\n<h1>1. 동등 비교 연산자</h1>\n<p>동등 비교 연산자는 좌항과 우항의 피연산자를 비교할 때 먼저 <strong>암묵적 타입 변환</strong>을 통해 타입을 일치시킨 후 <strong>같은 값</strong>인지 비교한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">5</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>동등 비교 연산자는 편리하지만 결과를 예측하기 어렵다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"0\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"false\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token boolean\">false</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<h1>2. 일치 비교 연산자</h1>\n<p>일치 비교 연산자는 좌항과 우항의 피연산자가 타입도 같고 값도 같은 경우에 한하여 true를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">5</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">5</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>일치 비교 연산자에서 주의해야 할 것은 NaN이다. NaN은 자신과 일치하지 않는 유일한 값이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">NaN</span> <span class=\"token operator\">===</span> <span class=\"token number\">NaN</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<p>따라서 숫자가 NaN인지 조사하려면 Number.isNaN을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">NaN</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nNumber<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>숫자 0도 양의 0과 음의 0을 비교하면 true를 반환하므로 주의해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token number\">0</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>","frontmatter":{"title":"[JS] ==와 ===","date":"May 24, 2023","description":"동등/일치 비교 연산자","tags":["Javascript"]}},"previous":{"fields":{"slug":"/2023/data-type/"},"frontmatter":{"title":"24. 데이터 타입"}},"next":{"fields":{"slug":"/2023/cookie-web-storage/"},"frontmatter":{"title":"쿠키(Cookie)와 웹 스토리지(Web Storage)"}}},"pageContext":{"id":"cec94730-fb99-5be9-8194-a5285d919a0b","previousPostId":"5795db14-134a-5610-94cc-e380c33fc33d","nextPostId":"40b399e3-ef2a-5939-b784-74cf995e155a"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}
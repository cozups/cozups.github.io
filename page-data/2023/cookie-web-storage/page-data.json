{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/cookie-web-storage/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"markdownRemark":{"id":"40b399e3-ef2a-5939-b784-74cf995e155a","excerpt":"Cookie 우리가 웹 사이트에 접근할 때, 서버가 생성하여 우리 컴퓨터(클라이언트)에 저장하는 데이터 블록 로그인 상태 유지 이전에 기입한 정보(이름, 주소 등)의 저장 팝업 창 “오늘 이 창을 다시 보지 않기” 서버가 데이터를 생성하고 유저 고유의 클라이언트 ID…","html":"<h1>Cookie</h1>\n<p>우리가 웹 사이트에 접근할 때, 서버가 생성하여 우리 컴퓨터(클라이언트)에 저장하는 데이터 블록</p>\n<ul>\n<li>로그인 상태 유지</li>\n<li>이전에 기입한 정보(이름, 주소 등)의 저장</li>\n<li>팝업 창 “오늘 이 창을 다시 보지 않기”</li>\n</ul>\n<p>서버가 데이터를 생성하고 유저 고유의 클라이언트 ID와 함께 저장한다.</p>\n<p><code class=\"language-text\">document.cookie</code>를 통해 쿠키를 생성, 접근, 삭제할 수 있다.</p>\n<p>key-value 형식을 따른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> ‘newCookie’\ndocument<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> “username<span class=\"token operator\">=</span>John Doe”<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">expires</code> 파라미터를 통해 쿠키의 만료일을 지정할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> “username<span class=\"token operator\">=</span>John Doe<span class=\"token punctuation\">;</span> expires<span class=\"token operator\">=</span>Thu<span class=\"token punctuation\">,</span> <span class=\"token number\">14</span> Dec <span class=\"token number\">2034</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span><span class=\"token number\">00</span><span class=\"token operator\">:</span><span class=\"token number\">00</span> <span class=\"token constant\">UTC</span>”<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Note: UTC is a time standard (the coordinated universal time).</span>\n<span class=\"token comment\">// If no expiration date is specified, the cookie is deleted by default when the browser is closed.</span></code></pre></div>\n<p><code class=\"language-text\">path</code> 파라미터를 통해 어떤 경로에 쿠키를 포함시킬지 지정할 수 있다.</p>\n<p><code class=\"language-text\">/admin</code>으로 지정하면 주소에 <code class=\"language-text\">/admin</code>이 들어있는 경우 포함된다. (<code class=\"language-text\">/cart</code>경로에는 포함되지 않음)</p>\n<p>아무런 path를 지정하지 않으면 현재 페이지에 쿠키가 포함된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"username=John Doe; expires=Thu, 14 Dec 2034 12:00:00 UTC; path=/\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Note: It is not recommended to store sensitive data in the root path of your application.</span></code></pre></div>\n<h2>쿠키의 단점</h2>\n<ul>\n<li>매 요청마다 쿠키 정보가 포함되고 데이터를 다시 로드하므로 성능에 안 좋은 영향을 미칠 수 있다.</li>\n<li>최대 4KB까지밖에 저장할 수 없다.</li>\n<li>탈취 당할 가능성이 있어 보안에 취약하다.</li>\n</ul>\n<h1>Web Storage</h1>\n<p>HTML5부터 브라우저에 데이터를 저장할 수 있게 되었다.</p>\n<p>또한 웹 사이트 성능에 영향을 미치지 않고 <strong>최대 5MB</strong>까지 데이터를 저장할 수 있다.</p>\n<p>웹 스토리지에 저장된 데이터는 서버로 이동되지 않으므로 클라이언트 사이드에서만 접근할 수 있다.</p>\n<h2>Local Storage</h2>\n<p>브라우저가 닫혀도 저장되어 있는 데이터가 유지된다.</p>\n<p>사용자가 직접 지우지 않는 이상 영구적으로 보존된다.</p>\n<ul>\n<li>사용: 자동 로그인</li>\n</ul>\n<h2>Session Storage</h2>\n<p>세션이 끝날 때까지 유지되는 저장소</p>\n<p>브라우저(브라우저 탭)가 닫히면 저장된 데이터는 사라진다.</p>\n<ul>\n<li>사용: 비회원 장바구니 기능</li>\n</ul>\n<h1>Cookie vs Web Storage</h1>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:828/format:webp/1*53Vi0hQO5W2dQ98ypnkXOg.png\" alt=\"https://miro.medium.com/v2/resize:fit:828/format:webp/1*53Vi0hQO5W2dQ98ypnkXOg.png\"></p>\n<p>출처</p>\n<p><a href=\"https://medium.com/segmentify-tech/cookie-vs-local-storage-session-storage-ee4c0a07b74e\">Storage Wars: Cookies vs. Local Storage vs. Session Storage</a></p>","frontmatter":{"title":"쿠키(Cookie)와 웹 스토리지(Web Storage)","date":"May 31, 2023","description":"쿠키와 웹 스토리지의 비교","tags":["Web"]}},"previous":{"fields":{"slug":"/2023/js-equal-operator/"},"frontmatter":{"title":"[JS] ==와 ==="}},"next":{"fields":{"slug":"/2023/regex/"},"frontmatter":{"title":"25. 정규 표현식"}}},"pageContext":{"id":"40b399e3-ef2a-5939-b784-74cf995e155a","previousPostId":"cec94730-fb99-5be9-8194-a5285d919a0b","nextPostId":"d5c940bb-ebb2-512a-b5b2-1d9293382ceb"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}
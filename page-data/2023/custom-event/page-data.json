{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023/custom-event/","result":{"data":{"site":{"siteMetadata":{"title":"cozups-log"}},"markdownRemark":{"id":"fb8d8f28-630a-53f8-aec5-a955128ed48c","excerpt":"개발자는 기본 이벤트가 아닌 커스텀 이벤트를 생성하여 원하는 작업을 수행할 수 있다. 1. 커스텀 이벤트 생성 커스텀 이벤트는 두 가지 방법으로 만들 수 있다.  생성자  생성자 1. Event() 생성자 type: 이벤트의 이름을 나타내는 문자열 options bubbles…","html":"<p>개발자는 기본 이벤트가 아닌 커스텀 이벤트를 생성하여 원하는 작업을 수행할 수 있다.</p>\n<h1>1. 커스텀 이벤트 생성</h1>\n<p>커스텀 이벤트는 두 가지 방법으로 만들 수 있다.</p>\n<ul>\n<li><code class=\"language-text\">Event()</code> 생성자</li>\n<li><code class=\"language-text\">CustomEvent()</code> 생성자</li>\n</ul>\n<h2>1. Event() 생성자</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Event</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>type: 이벤트의 이름을 나타내는 문자열</li>\n<li>options\n<ul>\n<li>bubbles\n<ul>\n<li>이벤트의 버블링 여부</li>\n<li>default: <code class=\"language-text\">false</code></li>\n</ul>\n</li>\n<li>cancelable\n<ul>\n<li>이벤트를 취소할 수 있는지</li>\n<li>default: <code class=\"language-text\">false</code></li>\n</ul>\n</li>\n<li>composed\n<ul>\n<li>이벤트가 섀도 루트(shadow root) 바깥의 이벤트 핸들러로도 전달될지</li>\n<li>default: <code class=\"language-text\">false</code></li>\n<li>섀도 루트?\nShadow root(Shadow DOM)은 웹 요소 내부에 캡슐화된 DOM 트리를 생성하는 데 사용된다. 일반적인 HTML 문서의 DOM은 하나의 트리 구조로 표현되지만 Shadow Root를 사용하면 요소 내에 독립적인 DOM 서브 트리를 만들 수 있다. Shadow Root 내부에서 발생한 이벤트는 외부로 전파되지 않고, 독립적인 이벤트 흐름을 가진다. 이를 통해 웹 컴포넌트 내부에서 발생한 이벤트를 외부에서 감지하지 못하게 할 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 버블링 가능하고 취소 불가능한 look 이벤트 생성</span>\n\n<span class=\"token keyword\">const</span> evt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Event</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"look\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">bubbles</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">cancelable</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// document 외의 다른 요소에서도 이벤트 발송 가능</span>\nmyDiv<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>evt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>2. CustomEvent() 생성자</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> customEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>type: 이벤트의 이름을 나타내는 문자열</li>\n<li>options\n<ul>\n<li>detail\n<ul>\n<li>이벤트 내에 포함할 이벤트의 세부 정보</li>\n<li>default: <code class=\"language-text\">null</code></li>\n</ul>\n</li>\n<li>Event() 생성자의 옵션들(bubbles, cancelable, composed)</li>\n</ul>\n</li>\n</ul>\n<h3>커스텀 이벤트 전달</h3>\n<p>커스텀 이벤트를 사용하기 위해서 <code class=\"language-text\">dispatchEvent()</code> 메서드를 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">EventTarget<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// EventTarget 인스턴스를 생성합니다. 이벤트가 발생할 요소를 나타냅니다.</span>\n<span class=\"token keyword\">const</span> targetElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myElement\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 커스텀 이벤트를 생성합니다.</span>\n<span class=\"token keyword\">const</span> customEvent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomEvent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myCustomEvent\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">detail</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hello, custom event!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 이벤트를 발생시킵니다.</span>\ntargetElement<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchEvent</span><span class=\"token punctuation\">(</span>customEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 이벤트를 수신하는 함수를 정의합니다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleCustomEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 이벤트를 수신할 요소에 이벤트 핸들러를 등록합니다.</span>\ntargetElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myCustomEvent\"</span><span class=\"token punctuation\">,</span> handleCustomEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"커스텀 이벤트","date":"July 18, 2023","description":"모던 자바스크립트 Deep Dive [31장]","tags":["Javascript"]}},"previous":{"fields":{"slug":"/2023/regex/"},"frontmatter":{"title":"25. 정규 표현식"}},"next":{"fields":{"slug":"/2023/Intersection-Observer/"},"frontmatter":{"title":"Intersection Observer"}}},"pageContext":{"id":"fb8d8f28-630a-53f8-aec5-a955128ed48c","previousPostId":"d5c940bb-ebb2-512a-b5b2-1d9293382ceb","nextPostId":"c494d23f-3cc9-5cad-8c75-ca9eb7dd85d9"}},"staticQueryHashes":["230163734","2841359383"],"slicesMap":{}}